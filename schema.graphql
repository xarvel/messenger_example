# Indicates exactly one field must be supplied and this field must not be `null`.
directive @oneOf on INPUT_OBJECT

# message
type Message {
  id: ID!
  text: String!
  creationDate: Date!
  senderName: String!
  senderID: String!
}

type PageInfo {
  startCursor: String!
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type MessageEdge {
  cursor: String!
  node: Message!
}

type PaginatedMessage {
  edges: [MessageEdge!]!
  pageInfo: PageInfo!
}

type SendMessageResponse {
  messageEdge: MessageEdge!
}

type RemoveMessageResponse {
  messageID: ID!
}

type Viewer {
  id: String!
}

# Date custom scalar type
scalar Date

type Query {
  viewer: Viewer!
  messages(last: Int! = 0, before: String, chatID: ID!): PaginatedMessage!
}

type Mutation {
  sendMessage(input: SendMessageInput!): SendMessageResponse!
  removeMessage(id: ID!): RemoveMessageResponse!
}

input SendMessageInput {
  text: String!
  chatID: ID!
}

type Subscription {
  messageAdded(chatID: String!): MessageEdge!
  messageRemoved(chatID: String!): [ID!]!
  messageUpdated(chatID: String!): Message!
}
